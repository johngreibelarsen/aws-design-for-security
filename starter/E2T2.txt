Research and analyze which of the vulnerabilities appear to be related to the code that was deployed for the environment in this project.

AWS Config reports among others the following non-compliant resources:
- securityhub-s3-bucket-logging-enabled-f25300da --> Logging not enabled on our 3 S3 buckets
- securityhub-s3-bucket-server-side-encryption-enabled-86e9e297 --> Our 3 Amazon S3 bucket don't have S3 default encryption enabled or denies writes without server side encryption


Amazon Inspector reports among others the following potential security issues:
Instance 'Web Service Instance - C3': 
- Port range 0 to 65535 is reachable from the internet 
- Port 22 is reachable from the internet
- Port 80 is reachable from the internet
Attack Instance - C3:
- Port 22 is reachable from the internet
Note: AWS Config reports the same thing but in a slightly different manner:
- securityhub-vpc-sg-open-only-to-authorized-ports-38f0766c --> security groups allow unrestricted incoming traffic. 
    * WebAppSG: tcp ['0-65535', '22', '5000'] port is authorized to be open
    * AttackInstanceSG: tcp ['22'] port is authorized to be open


Security Hub reports among others the following compliance readiness:
CIS AWS Foundations Benchmark v1.2.0
- Ensure no security groups allow ingress from 0.0.0.0/0 to port 22, reported on WebAppSG and AttackInstanceSG:
[CIS.4.1] Security groups provide stateful filtering of ingress/egress network traffic to AWS resources. It is recommended that no security group allows unrestricted ingress access to port 22
- Ensure no security groups allow ingress from 0.0.0.0/0 to port 3389, reported on WebAppSG:
[CIS.4.2] Security groups provide stateful filtering of ingress/egress network traffic to AWS resources. It is recommended that no security group allows unrestricted ingress access to port 3389 (RDP)

AWS Foundational Security Best Practices v1.0.0
- Security groups should not allow unrestricted access to ports with high risk, reported on WebAppSG and AttackInstanceSG:
[EC2.19] This control checks whether unrestricted incoming traffic for the security groups is accessible to the specified ports [3389, 20, 23, 110, 143, 3306, 8080, 1433, 9200, 9300, 25, 445, 135, 21, 1434, 4333, 5432, 5500, 5601, 22, 3000, 5000, 8088, 8888] that have the highest risk. This control passes when none of the rules in a security group allow ingress traffic from 0.0.0.0/0 for the listed ports
- S3 Block Public Access setting should be enabled at the bucket-level, reported on all our buckets:
[S3.8] This control checks if Amazon S3 buckets have bucket level public access blocks applied. This control fails if any of the bucket level settings are set to "false" public: ignorePublicAcls, blockPublicPolicy, blockPublicAcls, restrictPublicBuckets



Bonus - provide recommendations on how to remediate the vulnerabilities.

- Restrict the IP range that can access the 'Web Service Instance - C3' server on multiple ports, such a 20, 21, 22, 23, 3389 etc. Only needed ports should be opened for inbound traffic.
- Change inbound rule for each security group to allow ingress from restricted CIDR range.
- Additionally/Alternatively add Network ACL rules at the subnet level to narrow down type of traffic, source CIDR range and ports exposed. 
- Enable logging on S3 buckets and enable server-side encryption (SSE-S3, SSE-KMS, SSE-C)